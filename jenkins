pipeline {
    agent any

    environment {
        TF_WORKING_DIR = "${WORKSPACE}"
        DOCKER_IMAGE_NAME = "gimi89/praktika-tectigon:latest"
        DOCKERFILE_PATH = "." 
    }

    stages {
        stage('Clone repository') {
            steps {
                git 'https://github.com/jimmysaqipi/praktika-tectigon.git' // zëvendëso me URL-n e saktë
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Kontrollo për Dockerfile
                    def dockerfileExists = fileExists("${env.DOCKERFILE_PATH}/Dockerfile")
                    if (!dockerfileExists) {
                        error "Dockerfile nuk u gjet në rrugën ${env.DOCKERFILE_PATH}"
                    }
                    
                    // Ndërto imazhin Docker
                    docker.build("${env.DOCKER_IMAGE_NAME}")
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Vëre nëse kontajneri ekziston dhe ndalo nëse po
                    sh "docker stop ${env.DOCKER_IMAGE_NAME} || true"
                    sh "docker rm ${env.DOCKER_IMAGE_NAME} || true"
                    
                    // Drejto kontajnerin
                    docker.image("${env.DOCKER_IMAGE_NAME}").run(
                        "--name ${env.DOCKER_IMAGE_NAME} -p 8500:8500"
                    )
                }
            }
        }

        // Etapat e tjera të Terraform-it...
        stage('Terraform Init') {
            steps {
                dir("${TF_WORKING_DIR}") {
                    sh 'terraform init'
                }
            }
        }

        // ... etapat e tjera të jenkinsfile origjinal
    }

    post {
        always {
            echo "Pipeline finished"
            // Pastro kontajnerin pas përfundimit
            sh "docker stop ${env.DOCKER_IMAGE_NAME} || true"
            sh "docker rm ${env.DOCKER_IMAGE_NAME} || true"
        }
    }
}
